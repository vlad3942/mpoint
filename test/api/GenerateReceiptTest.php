<?php
require_once __DIR__ . '/../../webroot/inc/include.php';
require_once __DIR__ . '/../inc/testinclude.php';
require_once __DIR__ . '/../../api/classes/general.php';
require_once __DIR__ . '/../../api/interfaces/cpm_psp.php';

class GenerateReceiptTest extends baseAPITest
{
    protected int $pspId;
    private $_obj_TXT;
    private GeneralPSP $_obj_PSP;
    private TxnInfo $_obj_txnInfo;
    private RDB $_obj_DB;
    private SimpleXMLElement $_simpleXMLElement;

    public function setUp($isDBSetupRequired = TRUE): void
    {
        parent::setUp($isDBSetupRequired); // TODO: Change the autogenerated stub
        $this->_simpleXMLElement = new SimpleXMLElement('<?xml version="1.0" encoding="UTF-8"?><root></root>');
    }

    private function setupData($param = []): void
    {
        global $aMPOINT_CONN_INFO;

        $aMPOINT_CONN_INFO["paths"]["generate-receipt"] = empty($param["couponGenerateUrl"]) ? "/_test/simulators/safetypay/generate-receipt.php" : $param["couponGenerateUrl"];
        $couponGenerate = isset($param["couponGenerate"]) && $param["couponGenerate"] != "true" ? "false" : "true";
        $bucketName = @$param["bucketName"];
        $pspID = @$param["pspID"];

        $this->queryDB("INSERT INTO Client.Client_Tbl (id, flowid, countryid, name, username, passwd) VALUES (10099, 1, 100, 'Test Client', 'Tusername', 'Tpassword')");
        $this->queryDB("INSERT INTO Client.URL_Tbl (clientid, urltypeid, url) VALUES (10099, 4, 'http://mpoint.local.cellpointmobile.com/')");
        $this->queryDB("INSERT INTO Client.Account_Tbl (id, clientid) VALUES (1100, 10099)");
        $this->queryDB("INSERT INTO Client.Keyword_Tbl (id, clientid, name, standard) VALUES (1, 10099, 'CPM', true)");
        $this->queryDB("INSERT INTO Client.MerchantAccount_Tbl (id, clientid, pspid, name) VALUES (1, 10099, " . $pspID . ", '1')");
        $this->queryDB("INSERT INTO Client.MerchantSubAccount_Tbl (accountid, pspid, name) VALUES (1100, $pspID, '-1')");

        $this->queryDB("INSERT INTO client.additionalproperty_tbl ( key, value, externalid, type, enabled, scope) VALUES ('COUPON_GEN', '".$couponGenerate."',(SELECT ID FROM client.merchantaccount_tbl WHERE clientid = 10099 and pspid = $pspID) ,'merchant', true, 1)");
        $this->queryDB("INSERT INTO client.additionalproperty_tbl ( key, value, externalid, type, enabled, scope) VALUES ('COUPON_BUCKET_NAME', '".$bucketName."',(SELECT ID FROM client.merchantaccount_tbl WHERE clientid = 10099 and pspid = $pspID) ,'merchant', true, 1)");

        $this->queryDB("INSERT INTO Client.CardAccess_Tbl (clientid, cardid, pspid) VALUES (10099, 8, $pspID)");
        $this->queryDB("INSERT INTO log.session_tbl (id, clientid, accountid, currencyid, countryid, stateid, orderid, amount, mobile, deviceid, ipaddress, externalid, sessiontypeid) VALUES (1, 10099, 1100, 208, 100, 4030, '900-55150298', 5000, 9876543210, '', '127.0.0.1', -1, 1);");
        $this->queryDB("INSERT INTO Log.Transaction_Tbl (id, orderid, typeid, clientid, accountid, countryid, pspid, callbackurl, amount, ip, enabled, keywordid, sessionid,convertedamount) VALUES (1001001, '900-55150298', 100, 10099, 1100, 100, $pspID, '', 5000, '127.0.0.1', TRUE, 1, 1,5000)");

        $this->queryDB("INSERT INTO Log.Message_Tbl (txnid, stateid) VALUES (1001001, ". Constants::iPAYMENT_ACCEPTED_STATE. ")");

        $this->queryDB("INSERT INTO log.order_tbl (id, txnid, countryid, amount, productsku, productname, productdescription, productimageurl, points, reward, quantity, enabled, orderref, fees) VALUES (23940, 1001001, 100, 5000, 'product-ticket', 'ONE WAY', 'ONE WAY', '', 0, 0, 1, true, '900-55150298', 0)");
        $this->queryDB("INSERT INTO log.flight_tbl (id, service_class, departure_airport, arrival_airport, op_airline_code, order_id, arrival_date, departure_date, mkt_flight_number, tag, trip_count, service_level, departure_countryid, arrival_countryid, departure_timezone) VALUES (36174, 'A', 'MNL', 'DVO', '5J', 23940, '2021-06-09 06:30:00.000', '2021-06-09 04:30:00.000', '961', '1', '1', '3', 100, 100, '+08:00')");
        $this->queryDB("INSERT INTO log.passenger_tbl (id, first_name, last_name, type, order_id, title, email, mobile, country_id, amount, seq) VALUES (41798, 'fname', 'lname', '', 23940, 'Mr', 'demo@cellpointmobile.com', '639123123123', '100', 0, 1)");


        $this->_obj_DB = RDB::produceDatabase($this->mPointDBInfo);
        $this->_obj_txnInfo = TxnInfo::produceInfo(1001001, $this->_obj_DB);

        $this->_obj_TXT = new api\classes\core\TranslateText([sLANGUAGE_PATH . sLANG . "/global.txt", sLANGUAGE_PATH . sLANG . "/custom.txt"], sSYSTEM_PATH, 0, "UTF-8");
        $this->_obj_PSP = new GeneralPSP($this->_obj_DB, $this->_obj_TXT, $this->_obj_txnInfo, $aMPOINT_CONN_INFO, NULL, NULL);
    }

    public function testSafetyPayGenerateReceiptSuccess()
    {
        $param["couponGenerate"] = "true";
        $param["bucketName"] = "test-client-bucket-name";
        $param["pspID"] = Constants::iSAFETYPAY_AGGREGATOR;
        
        $this->setupData($param);
		$this->assertTrue($this->_obj_PSP->generate_receipt());
    }

    public function testSafetyPayGenerateReceiptFailure()
    {
        $this->bIgnoreErrors = true;
        $param["couponGenerateUrl"] = "/_test/simulators/safetypay/server-error.php";
        $param["couponGenerate"] = "true";
        $param["bucketName"] = "test-client-bucket-name";
        $param["pspID"] = Constants::iSAFETYPAY_AGGREGATOR;

        $this->setupData($param);
		$this->assertFalse($this->_obj_PSP->generate_receipt());
    }

    public function testSafetyPayGenerateReceiptFailureNoCoponFlag()
    {
        $param["bucketName"] = "test-client-bucket-name";
        $param["pspID"] = Constants::iSAFETYPAY_AGGREGATOR;
        
        $this->setupData($param);
		$this->assertTrue($this->_obj_PSP->generate_receipt());
    }

    public function testSafetyPayGenerateReceiptFailureNoBucket()
    {
        $param["couponGenerate"] = "true";
        $param["pspID"] = Constants::iSAFETYPAY_AGGREGATOR;
        
        $this->setupData($param);
		$this->assertTrue($this->_obj_PSP->generate_receipt());
    }
}